# Write a python script that generates random memory initialization data to write to file mem_init_values_i.txt to be used by the testbench.
# Generate i such files, one for each random initialized simulation of testbench.
# The template of mem_init_values_i.txt is as follows:
# address row col data
# 0000000 01 000 1010011110101111110011001011100101110001010011100111111011010000100111000101001000011001100010101010110100010000110101001110001101011000111011111011001111100011010101101100110100110101101010011101110100010001101101010001000100101100000111110100001000010110
# 0000001 01 000 1111101001111010100101001011001111010100010001011111011010011010100000100000111101010011100000100010100101110110000010010111111110000101101001000001011000000101111001111110001111110001111100011011111001000000110010110000001110101111111100111011101011101101
# 0000010 01 000 0010001111101110010111100011100110001001010110010100111100101101110000101010111001011001011111101001111011101111101010001100011001011101001110110011001101101101111100100101000111101010001100000100000101111110001011100010000110010001001101100110111101111011
# 0000011 01 000 0100111110100111100110101110010000111100110110000101110110000001111011101101000100001011111110111101011011100011001000001011011010110101000101111110101010101011100110110110011100011011001001111000100111101111101001111111000000000000011100011100011001111101
# 0000000 10 000 1111100101100101010010011010101011001000111010101101001001111000011111110110011011000011100101100111010111110011110101011101111101110001111110001101000100111111110001001000011101101010101101101001011000011111011000010101001110111111111111010011110101011011
# 0000001 10 000 1011101011100110011011010111011101000101010110110111000010010111101111000000001000010000010110011010100111111111100001101011111011100101011110101011110100010000000011111110100001011100000111110011000110101100100100010101001111111010000001001011010010100011
# 0000010 10 000 0000110100010101010011111001011110011010101110011100101101100111101101111101101111010010000100111101110110111000000001001000111000110000010000111001001110010011000101111010001100001111111100010101111100000111000011010111010000110110011110110110111100001011
# 0000011 10 000 0110000110001001010010001011110001000000000101101001111001101010110011100100110111101110010110101011100010000101100000110101010011110001101111100101011010111100101111111001010001010111100110101101111011101000111010111001110100011000010100001011101010011101
# 0000100 10 000 1011011001010011010011110011010000010000110100010001011110000010001011011100111100001100111111110001100011100010010011010111011011110100000100110100000010101010001100010001001110110110001001100010100001011010000101001111111101010100011101110101100111101011
# Only that last column data is random, the rest is fixed.
# Data column is 256 bits long. Each bit is a random 0 or 1.
# The address, rows and columns is fixed.

import random
import sys

# The number of files to generate
num_files = 100
location = []
#Generate random data values
def generate_random_256bit_value():
    random_value = random.getrandbits(256)
    binary_value = format(random_value, '0256b')
    return binary_value

#Get all address locations from mem_init_values_bin.txt file
def get_address_locations():
    with open('./mem_init_values/mem_init_values_bin.txt', 'r') as f:
        current = 0
        lines = f.readlines()
        for line in lines:
            address = line.split()[0]
            row = line.split()[1]
            col = line.split()[2]
            location.append([address, row, col])
            current += 1

#Write random data values to file in the format specified
def write_to_file(file_name):
    with open(file_name, 'w') as f:
        for i in range(len(location)):
            f.write(location[i][0] + " " + location[i][1] + " " + location[i][2] + " " + generate_random_256bit_value() + "\n")

#Generate num_files number of files
get_address_locations()
for i in range(200,500):
    write_to_file("./mem_init_values/mem_init_values_" + str(i) + ".txt")
